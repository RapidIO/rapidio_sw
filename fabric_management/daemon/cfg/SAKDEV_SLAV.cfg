// Configuration file for Fabric Management Daemon (FMD)
// File names for device directory
DEV_DIR /RIO_SM_DEV_DIR
DEV_DIR_MTX /RIO_SM_DEV_DIR_MUTEX

// Fabric management daemon MPORT information: 
// - Port number 
// - Operating mode (slave/master)
// - Size(s) of deviceIDs for which routing must be configured/learned
// - DestID of the master port.
// - Hopcount of the master port (should always be 255).
MPORT 0 slave dev08 10 255 END

// Master Fabric Management Daemon configuration
// - Size(s) of device ID (dev8, dev16, dev32)
// - Device ID
// - Channelized Messaging channel number
// 
// If any of the MPORTs above is operating in "master" mode, this selects
// the device ID for the master and the Channelized Messaging number for
// CM Messaging with other daemons.

MASTER_INFO dev08 9 3434

// System Configuration Info
// - Define list of endpoints.  Each endpoint has:
//	- a list of ports with configuration information
// - Define list of switches.  Each switch has:
//	- a list of ports
//	- routing tables.
// - Define connections between switches/endpoints
//
// ENDPOINT <ep_name>
// <ep_name>  : Text string used to identify this endpoint
// PORT <port_num> <comptag> {<devid_sz> <devID> <hopcount>...}
// <port_num> : Endpoint port number
// <comp_tag> : Hexadecimal component tag value for this port number/device
// <max_width>: 4x|2x|1x
// <op width> : 4x|2x|1x
// <baudrate> : 6p25|5p0|3p125|2p5|1p25
// <idle seq> : IDLE1|IDLE2
// <err_mgmt> : EM_OFF|EM_ON   
// List of device IDs for the port:
// <devid_sz> : dev08|dev16|dev32
// <devID>    : decimal value for device ID
// <hopcount> : decimal value for hopcount for maintenance packets
// END        : End of device ID list for this port.
// PEND       : End of port list for this endpoint
// Note: Each PORT can have a device ID for each allowed size
// 

ENDPOINT SAKDEV_SLAV PORT 0 2000A 2x 2x 6p25  IDLE2 EM_ON  dev08 10 1 END PEND

// Every file must have an "EOF" keyword to indicate end of file.
// This makes it easy to end configuration file processing before the
// actual end of file, allowing additional comments/content to follow.

EOF
