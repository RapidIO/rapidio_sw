// Template configuration file for StarBridge RapidExpress switch.
//
// Supports 4 nodes, connected as follows:
// node1 : connected to left most QSFP (Port 1, SP 0)
// node2 : connected to left most QSFP (Port 2, SP 4)
// node3 : connected to left most QSFP (Port 3, SP 1)
// node4 : connected to left most QSFP (Port 4, SP 5)
//
// File names for device directory
DEV_DIR /RIO_SM_DEV_DIR
DEV_DIR_MTX /RIO_SM_DEV_DIR_MUTEX

// Fabric management daemon MPORT information:
// - Port number
// - Operating mode (slave/master)
// - Memory size (mem34, mem50, mem66)
// - Size(s) of deviceIDs for which routing must be configured/learned
// - DestID (hexadecimal) of the master port.
// - Hopcount of the master port (should always be 255).
MPORT 0 master MEMSZ dev08 0x5 255 END

// Master Fabric Management Daemon configuration
// - Size(s) of device ID (dev8, dev16, dev32)
// - Device ID (hexadecimal)
// - Channelized Messaging channel number
//
// If any of the MPORTs above is operating in "master" mode, this selects
// the device ID for the master and the Channelized Messaging number for
// CM Messaging with other daemons.

MASTER_INFO dev08 0x5 4545

// System Configuration Info
// - Define list of endpoints.  Each endpoint has:
//      - a list of ports with configuration information
// - Define list of switches.  Each switch has:
//      - a list of ports
//      - routing tables.
// - Define connections between switches/endpoints
//
// ENDPOINT <ep_name>
// PORT <port_num> <comptag> {<devid_sz> <devID> <hopcount>...}
// END        : End of device ID list for this port.
// PEND       : End of port list for this endpoint
//
// Where the parameters are defined as follows:
// <ep_name>  : Text string used to identify this endpoint
// <port_num> : Endpoint port number
// <comp_tag> : Hexadecimal component tag value for this port number/device
// <max_width>: 4x|2x|1x
// <op width> : 4x|2x|1x
// <baudrate> : 6p25|5p0|3p125|2p5|1p25
// <idle seq> : IDLE1|IDLE2
// <err_mgmt> : EM_OFF|EM_ON
// List of device IDs for the port:
// <devid_sz> : dev08|dev16|dev32
// <devID>    : Hexadecimal value for device ID
// <hopcount> : decimal value for hopcount for maintenance packets
//
// Note: Each PORT can have a device ID for each allowed size

ENDPOINT node1 PORT 0 10005 4x 4x 5p0   IDLE2 EM_OFF dev08 0x5 255 END PEND
ENDPOINT node2 PORT 0 20006 2x 2x 6p25  IDLE2 EM_ON  dev08 0x6 1 END PEND
ENDPOINT node3 PORT 0 30007 4x 4x 1p25  IDLE1 EM_OFF dev08 0x7 1 END PEND
ENDPOINT node4 PORT 0 40008 4x 4x 2p5   IDLE1 EM_OFF dev08 0x8 1 END PEND

// SWITCH <device> <name> <devid_sz> <devID> <hc> <ct>
// PORT <#> <max width> <op width> <baudrate> <idle seq> <err_mgmt>
// ROUTING_TABLE <devid_sz> <rt_port>
// <rt_port : GLOBAL, or 0 to 18 (decimal)
// DESTID <devid|ep_name.#> <rt_value>
// RANGE <devid> <devid> <rt_value>
// MCMASK <mc_masknum> <portlist>
// <END>
// Where the terms above are defined as:
// <devid_sz>: dev08|dev16|dev32
// <devID>    : Hexadecimal value for device ID
// <#>       : port number, 0-17
// <max_widt>: 4x|2x|1x
// <op width>: 4x|2x|1x
// <baudrate>: 6p25|5p0|3p125|2p5|1p25
// <idle seq>: IDLE1|IDLE2
// <err_mgmt>: EM_OFF|EM_ON
// <devid|ep_name.#> : Hexadecimal device identifier value, or
//                     device name and port number.
// <rt_value> : 0 - 17    : Port number
//              <MC xx>   : Multicast Mask number, xx can be 0-39.
//              NEXT_BYTE : Use next byte in deviceID for routing.
//                          Invalid for Dev08 deviceIDs.
//              DEFAULT   : Use default route
//              DROP      : Drop these packets
// <mc_masknum>: decimal number 0 through 39
// <portlist>  : list of port numbers (0-17) in the multicast mask
SWITCH CPS1432 MAIN_SWITCH dev08 9 0 70009
PORT 0 4x 4x 5p0 IDLE2 EM_ON
PORT 1 4x 4x 5p0 IDLE2 EM_ON
PORT 2 4x 4x 5p0 IDLE2 EM_OFF
PORT 3 4x 4x 5p0 IDLE2 EM_OFF
PORT 4 4x 4x 5p0 IDLE1 EM_ON
PORT 5 4x 4x 5p0 IDLE1 EM_ON
PORT 6 4x 4x 5p0 IDLE1 EM_OFF
PORT 7 4x 4x 5p0 IDLE1 EM_OFF
ROUTING_TABLE dev08 GLOBAL
DFLTPORT DROP
DESTID node1.0 0
DESTID node2.0 4
DESTID node3.0 1
DESTID node4.0 5
END

// Connection topology in the fabric.
// CONNECT <device.#> <device.#>
// Where <device.#> can be a switch or an endpoint.
//

CONNECT MAIN_SWITCH.0 node1.0
CONNECT MAIN_SWITCH.4 node2.0
CONNECT MAIN_SWITCH.1 node3.0
CONNECT MAIN_SWITCH.5 node4.0

// Every file must have an "EOF" keyword to indicate end of file.
// This makes it easy to end configuration file processing before the
// actual end of file, allowing additional comments/content to follow.

EOF
